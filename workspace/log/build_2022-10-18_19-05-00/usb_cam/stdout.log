-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found ament_cmake: 0.7.6 (/opt/ros/dashing/share/ament_cmake/cmake)
-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.6.9", minimum required is "3") 
-- Using PYTHON_EXECUTABLE: /usr/bin/python3
-- Found rclcpp: 0.7.16 (/opt/ros/dashing/share/rclcpp/cmake)
-- Found rosidl_adapter: 0.7.10 (/opt/ros/dashing/share/rosidl_adapter/cmake)
-- Found rmw_implementation_cmake: 0.7.2 (/opt/ros/dashing/share/rmw_implementation_cmake/cmake)
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found sensor_msgs: 0.7.1 (/opt/ros/dashing/share/sensor_msgs/cmake)
-- Found cv_bridge: 2.1.4 (/opt/ros/dashing/share/cv_bridge/cmake)
-- Found OpenCV: /usr (found version "3.2.0") found components:  core highgui videoio 
-- Found rclcpp_components: 0.7.16 (/opt/ros/dashing/share/rclcpp_components/cmake)
-- Found poco_vendor:  (/opt/ros/dashing/share/poco_vendor/cmake)
-- Configuring done
-- Generating done
-- Build files have been written to: /workspace/build/usb_cam
[35m[1mScanning dependencies of target usb_cam[0m
[ 33%] [32mBuilding CXX object CMakeFiles/usb_cam.dir/src/image_subscriber.cpp.o[0m
[ 66%] [32mBuilding CXX object CMakeFiles/usb_cam.dir/src/usb_cam.cpp.o[0m
[100%] [32m[1mLinking CXX shared library libusb_cam.so[0m
[100%] Built target usb_cam
[100%] Built target usb_cam
[36mInstall the project...[0m
-- Install configuration: ""
-- Installing: /workspace/install/usb_cam/lib/libusb_cam.so
-- Set runtime path of "/workspace/install/usb_cam/lib/libusb_cam.so" to ""
-- Installing: /workspace/install/usb_cam/share/ament_index/resource_index/package_run_dependencies/usb_cam
-- Installing: /workspace/install/usb_cam/share/ament_index/resource_index/parent_prefix_path/usb_cam
-- Installing: /workspace/install/usb_cam/share/usb_cam/environment/ament_prefix_path.sh
-- Installing: /workspace/install/usb_cam/share/usb_cam/environment/path.sh
-- Installing: /workspace/install/usb_cam/share/usb_cam/local_setup.bash
-- Installing: /workspace/install/usb_cam/share/usb_cam/local_setup.sh
-- Installing: /workspace/install/usb_cam/share/usb_cam/local_setup.zsh
-- Installing: /workspace/install/usb_cam/share/ament_index/resource_index/packages/usb_cam
-- Installing: /workspace/install/usb_cam/share/ament_index/resource_index/rclcpp_components/usb_cam
-- Installing: /workspace/install/usb_cam/share/usb_cam/cmake/usb_camConfig.cmake
-- Installing: /workspace/install/usb_cam/share/usb_cam/cmake/usb_camConfig-version.cmake
-- Installing: /workspace/install/usb_cam/share/usb_cam/package.xml
