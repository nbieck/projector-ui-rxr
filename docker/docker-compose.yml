version: "2.3"
services: 
  build_image:
    build: ./
    image: ros2:dashing
   # volumes:
    #  - ./workspace/:/workspace/
     # - /tmp/.X11-unix:/tmp/.X11-unix

  colcon:
    image: ros2:dashing
    command: bash -c "cd /workspace && colcon build"
    volumes:
      - ./workspace/:/workspace/
      - /tmp/.X11-unix:/tmp/.X11-unix
    tty: true

  sample:
    container_name: sample
    image: ros2:dashing
    command: bash -c "cd /workspace/install/ && source setup.bash && ros2 run sample sample_package"
    volumes:
      - ./workspace/:/workspace/
      - /tmp/.X11-unix:/tmp/.X11-unix
    tty: true

  pub:
    container_name: pub
    image: ros2:dashing
    command: bash -c "cd /workspace/install/ && source setup.bash && ros2 run pubsub publisher"
    volumes:
      - ./workspace/:/workspace/
      - /tmp/.X11-unix:/tmp/.X11-unix
    tty: true

  sub:
    container_name: sub
    image: ros2:dashing
    command: bash -c "cd /workspace/install/ && source setup.bash && ros2 run pubsub subscriber"
    volumes:
      - ./workspace/:/workspace/
      - /tmp/.X11-unix:/tmp/.X11-unix
    tty: true
  
  talker:
    container_name: talker
    image: ros2:dashing
    command: ros2 run demo_nodes_cpp talker
  
  # imgpublish:
  #   container_name: imgpublish
  #   image: ros2:dashing
  #   command: ros2 run image_tools cam2image --ros-args -p device_id:=0 -p reliability:=best_effort -p width:=640 -p height:=480 -p frequency:=30.0
  #   volumes:
  #     - ./workspace/:/src
  #     - /tmp/.X11-unix:/tmp/.X11-unix
  #     - /dev/video0:/dev/video0
  #   environment:
  #     - DISPLAY=${DISPLAY}
  #   tty: true
  #   privileged: true

  # pycam:
  #   container_name: pycam
  #   image: ros2:dashing
  #   command: bash -c "cd /root/workspace/src/imgtest/src && python3 test.py"
  #   volumes:
  #     - ./workspace:/root/workspace
  #     - /tmp/.X11-unix:/tmp/.X11-unix
  #   environment:
  #     - DISPLAY=${DISPLAY}
  #   devices:
  #     - /dev/video0:/dev/video0:mwr
  #   tty: true
  #   privileged: true

  # imgsubscribe:
  #   container_name: imgsubscribe
  #   image: ros2:dashing
  #   command: ros2 run image_tools showimage --ros-args -p reliability:=best_effort
  # listener:
  #   container_name: listener
  #   image: ros2:dashing
  #   command: ros2 run demo_nodes_cpp listener

  # realsense:
  #   container_name: realsense
  #   image: ros2:dashing
  #   command: ros2 launch realsense_ros2_camera ros2_intel_realsense.launch.py
  #   volumes:
  #     - ./workspace/:/workspace/
  #     - /tmp/.X11-unix:/tmp/.X11-unix

  # cpp_test:
  #   container_name: cpp_test
  #   image: ros2:dashing
  #   command: rosrun opencv_test main
